name: Check the script integrity

on:
  push:
  pull_request:
    
jobs:
  run-scripts:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.runs-on }}
  
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          ref: ${{ github.ref }}
      - name: Copy the scripts to the test suite folders
        shell: bash
        run: |
          mkdir testsuite/tools
          cp *.cmd testsuite/tools/
          cp *.sh testsuite/tools/
          mkdir testsuite2/tools
          cp *.cmd testsuite2/tools/
          cp *.sh testsuite2/tools/
      - name: Test the build script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\build.cmd
          testsuite2\tools\build.cmd Argument 1 "Argument 2"
      - name: Test the clean script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\clean.cmd
          testsuite2\tools\clean.cmd Argument 1 "Argument 2"
      - name: Test the docgen-pack script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\docgen-pack.cmd
          testsuite2\tools\docgen-pack.cmd Argument 1 "Argument 2"
      - name: Test the docgen script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\docgen.cmd
          testsuite2\tools\docgen.cmd Argument 1 "Argument 2"
      - name: Test the pack script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\pack.cmd
          testsuite2\tools\pack.cmd Argument 1 "Argument 2"
      - name: Test the push script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\push.cmd
          testsuite2\tools\push.cmd Argument 1 "Argument 2"
      - name: Test the localization script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\localize.cmd
          testsuite2\tools\localize.cmd Argument 1 "Argument 2"
      - name: Test the increment script (Windows)
        if: matrix.runs-on == 'windows-latest'
        run: |
          testsuite\tools\increment.cmd
          testsuite2\tools\increment.cmd Argument 1 "Argument 2"
      - name: Test the build script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/build.sh
          bash testsuite2/tools/build.sh Argument 1 "Argument 2"
      - name: Test the clean script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/clean.sh
          bash testsuite2/tools/clean.sh Argument 1 "Argument 2"
      - name: Test the docgen-pack script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/docgen-pack.sh
          bash testsuite2/tools/docgen-pack.sh Argument 1 "Argument 2"
      - name: Test the docgen script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/docgen.sh
          bash testsuite2/tools/docgen.sh Argument 1 "Argument 2"
      - name: Test the pack script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/pack.sh
          bash testsuite2/tools/pack.sh Argument 1 "Argument 2"
      - name: Test the push script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/push.sh
          bash testsuite2/tools/push.sh Argument 1 "Argument 2"
      - name: Test the localization script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/localize.sh
          bash testsuite2/tools/localize.sh Argument 1 "Argument 2"
      - name: Test the increment script (Unix)
        if: matrix.runs-on != 'windows-latest'
        run: |
          bash testsuite/tools/increment.sh
          bash testsuite2/tools/increment.sh Argument 1 "Argument 2"
            
  check-scripts:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          ref: ${{ github.ref }}
      - name: Copy the scripts to the test suite folders
        run: |
          mkdir testsuite/tools
          cp *.cmd testsuite/tools/
          cp *.sh testsuite/tools/
          mkdir testsuite2/tools
          cp *.cmd testsuite2/tools/
          cp *.sh testsuite2/tools/
      - name: Check the build script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/build.sh -P testsuite/ -x
          shellcheck testsuite2/tools/build.sh -P testsuite2/ -x
      - name: Check the clean script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/clean.sh -P testsuite/ -x
          shellcheck testsuite2/tools/clean.sh -P testsuite2/ -x
      - name: Check the docgen-pack script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/docgen-pack.sh -P testsuite/ -x
          shellcheck testsuite2/tools/docgen-pack.sh -P testsuite2/ -x
      - name: Check the docgen script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/docgen.sh -P testsuite/ -x
          shellcheck testsuite2/tools/docgen.sh -P testsuite2/ -x
      - name: Check the pack script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/pack.sh -P testsuite/ -x
          shellcheck testsuite2/tools/pack.sh -P testsuite2/ -x
      - name: Check the push script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/push.sh -P testsuite/ -x
          shellcheck testsuite2/tools/push.sh -P testsuite2/ -x
      - name: Check the localization script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/localize.sh -P testsuite/ -x
          shellcheck testsuite2/tools/localize.sh -P testsuite2/ -x
      - name: Check the increment script
        continue-on-error: true
        run: |
          shellcheck testsuite/tools/increment.sh -P testsuite/ -x
          shellcheck testsuite2/tools/increment.sh -P testsuite2/ -x